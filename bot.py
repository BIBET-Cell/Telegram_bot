from telegram import Update, InputMediaPhoto, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
from datetime import datetime, timedelta

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π)
TOKEN = '7937428133:AAHlZ911n2Wk8kJla3n28cgJ1zXzhxQWZCM'

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_activity = {}

# –õ–∏–º–∏—Ç—ã –¥–ª—è –∞–Ω—Ç–∏-—Å–ø–∞–º–∞
SPAM_LIMIT = 10  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π
SPAM_TIME_WINDOW = 60  # –í—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–∫–Ω–æ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (1 –º–∏–Ω—É—Ç–∞)
BLOCK_TIME = 300  # –í—Ä–µ–º—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (5 –º–∏–Ω—É—Ç)

# –ü—É—Ç–∏ –∫ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞–º (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º)
SCREENSHOTS = [
    "screenshots/screenshot1.jpg",
    "screenshots/screenshot2.jpg",
    "screenshots/screenshot3.jpg",
    "screenshots/screenshot4.jpg",
    "screenshots/screenshot5.jpg"
]

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if is_user_blocked(user_id):
        blocked_until = user_activity[user_id]["blocked_until"]
        remaining_time = int((blocked_until - datetime.now()).total_seconds() // 60)
        await update.message.reply_text(
            f"‚è≥ Oops! You've sent too many messages. Please wait {remaining_time} minute(s) to continue."
        )
        return

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
    keyboard = [
        [KeyboardButton("üé• Demo Video"), KeyboardButton("üí≥ Buy Access")],
        [KeyboardButton("‚ÑπÔ∏è Description")],
        [KeyboardButton("üì¢ Updates"), KeyboardButton("üì∏ Reviews")],
        [KeyboardButton("üìû Support")]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    welcome_message = (
        "*üî• Welcome to the Ultimate Content Hub!* üî•\n\n"
        "Unlock the most exclusive and private content you‚Äôve ever seen.\n"
        "From hidden Telegram channels to secret cloud libraries ‚Äî everything is here for you.\n\n"
        "üëá Choose your destiny below:"
    )
    await update.message.reply_text(welcome_message, parse_mode="Markdown", reply_markup=reply_markup)

    # –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    track_user_activity(user_id)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    text = update.message.text

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if is_user_blocked(user_id):
        blocked_until = user_activity[user_id]["blocked_until"]
        remaining_time = int((blocked_until - datetime.now()).total_seconds() // 60)
        await update.message.reply_text(
            f"‚è≥ Oops! You've sent too many messages. Please wait {remaining_time} minute(s) to continue."
        )
        return

    # –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    track_user_activity(user_id)

    if text == "üé• Demo Video":
        demo_message = (
            "*üîë Demo Access Key:* `QP8KdJr5!718D27KGT59Y&*U789Op` _(Click to copy)_\n\n"
            "[üîó Download Link](https://drive.proton.me/urls/P6FEHQ3SC0#kKjT5HJFqiJD)\n\n"
            "_Note: Click the link above to download. The key can be copied by clicking on it._"
        )
        await update.message.reply_text(demo_message, parse_mode="Markdown", disable_web_page_preview=True)

    elif text == "üí≥ Buy Access":
        payment_details = (
            "*üí≥ Payment Method:* Cryptocurrency\n"
            "*üí∞ Amount:* 100.00 USD\n\n"
            "*üìù Payment Details:*\n\n"
            "‚ñ´Ô∏è ***USDT [TRC-20]***: `TPcHuYU8VVhTzU4SHqu1BgZTYzQB4tVZMn` _(Click to copy)_\n\n"
            "‚ñ´Ô∏è ***Toncoin (TON)***: `UQCid0apjKYoX5oFgNavx1WOsbRDbtynPG-54nKtShhMXq` _(Click to copy)_\n\n"
            "‚ñ´Ô∏è ***Bitcoin (BTC)***: `1GBWE9zYL8zijJpTSVFYUKkXr4PPPYAQKc` _(Click to copy)_\n\n"
            "‚ñ´Ô∏è ***Ethereum (ERC-20)***: `0x633f4df2f494db05525679047fc11063ec2ac297` _(Click to copy)_\n\n"
            "‚ñ´Ô∏è ***BNB [BEP-20]***: `0x633f4df2f494db05525679047fc11063ec2ac297` _(Click to copy)_\n\n"
            "‚ñ´Ô∏è ***Litecoin (LTC)***: `LeQc7731tVFWWe1SukcTX28vdxnm4mGoac` _(Click to copy)_\n\n"
            "For PayPal payment, contact me: [@vice_cityy](https://t.me/vice_cityy) _(Click to contact)_\n\n"
            "üìã *Instructions:*\n"
            "1. Copy the desired address by clicking on it.\n"
            "2. Send the exact amount to the address.\n"
            "3. Take a screenshot of the confirmed transfer.\n"
            "4. Send the screenshot to [@vice_cityy](https://t.me/vice_cityy) for verification.\n\n"
            "*üíé Why Choose Us?*\n"
            "We offer the most exclusive content with daily updates and a massive library of over 4.5 TB of videos and photos. "
            "Your satisfaction is our priority, and we ensure fast support and secure transactions. "
            "Join now and unlock a world of premium content!"
        )
        await update.message.reply_text(payment_details, parse_mode="Markdown", disable_web_page_preview=True)

    elif text == "‚ÑπÔ∏è Description":
        description = (
            "*üîí Exclusive Access:*\n"
            "*More than +300 closed Telegram channels available in any category from A to Z ‚Äî absolutely everything!*\n\n"
            "*üìÖ Daily Updates:*\n"
            "*Receive 10-15 fresh and exciting new links every single day with exclusive amateur content you won't find anywhere else.*\n\n"
            "*‚òÅÔ∏è Cloud Library:*\n"
            "*Access over 4.5 TB of videos and photos in Mega, Yandex.Disk, and Mail.ru cloud storage ‚Äî download and enjoy at your convenience.*\n\n"
            "*Demo videos are available below by clicking the button. This is only 0.01% of what you'll get!*"
        )
        await update.message.reply_text(description, parse_mode="Markdown", disable_web_page_preview=True)

    elif text == "üì¢ Updates":
        updates_message = (
            "*üîî Latest Updates:*\n"
            "Stay tuned for the latest news and updates from our service!\n\n"
            "Join our official channel for more information:\n"
            "[üì¢ Updates Channel](https://t.me/+kdmfbAa8d6YyMTI6)\n\n"
            "_Note: All links in this message are clickable._"
        )
        await update.message.reply_text(updates_message, parse_mode="Markdown", disable_web_page_preview=False)

    elif text == "üì∏ Reviews":
        media_group = [InputMediaPhoto(open(screenshot, "rb")) for screenshot in SCREENSHOTS]
        await update.message.reply_media_group(media=media_group)

    elif text == "üìû Support":
        support_message = (
            "*üí¨ Support Information:*\n"
            "For payment-related questions or technical support, contact me:\n"
            "[@vice_cityy](https://t.me/vice_cityy) _(Click to contact)_\n\n"
            "_Note: All links in this message are clickable._"
        )
        await update.message.reply_text(support_message, parse_mode="Markdown", disable_web_page_preview=True)

    elif text == "üîô Back":
        keyboard = [
            [KeyboardButton("üé• Demo Video"), KeyboardButton("üí≥ Buy Access")],
            [KeyboardButton("‚ÑπÔ∏è Description")],
            [KeyboardButton("üì¢ Updates"), KeyboardButton("üì∏ Reviews")],
            [KeyboardButton("üìû Support")]
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        welcome_message = (
            "*üî• Welcome to the Ultimate Content Hub!* üî•\n\n"
            "Unlock the most exclusive and private content you‚Äôve ever seen.\n"
            "From hidden Telegram channels to secret cloud libraries ‚Äî everything is here for you.\n\n"
            "üëá Choose your destiny below:"
        )
        await update.message.reply_text(welcome_message, parse_mode="Markdown", reply_markup=reply_markup)

    else:
        await update.message.reply_text("‚ö†Ô∏è Unknown command. Please use the buttons below.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def track_user_activity(user_id):
    now = datetime.now()
    if user_id not in user_activity:
        user_activity[user_id] = {"messages": [], "blocked_until": None}

    # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã—Ö–æ–¥—è—Ç –∑–∞ –ø—Ä–µ–¥–µ–ª—ã –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –æ–∫–Ω–∞
    user_activity[user_id]["messages"] = [
        msg_time for msg_time in user_activity[user_id]["messages"]
        if now - msg_time < timedelta(seconds=SPAM_TIME_WINDOW)
    ]

    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    user_activity[user_id]["messages"].append(now)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏ –ª–∏–º–∏—Ç
    if len(user_activity[user_id]["messages"]) > SPAM_LIMIT:
        user_activity[user_id]["blocked_until"] = now + timedelta(seconds=BLOCK_TIME)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
def is_user_blocked(user_id):
    if user_id not in user_activity:
        return False

    blocked_until = user_activity[user_id].get("blocked_until")
    if blocked_until and datetime.now() < blocked_until:
        return True

    return False

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
def main():
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = ApplicationBuilder().token(TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    application.run_polling()

if __name__ == "__main__":
    main()